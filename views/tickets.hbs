<div class="container">
  <section>
    <div class="d-flex justify-content-between mb-3">
      <h2>Tickets</h2>
      {{!-- <button class="btn btn-primary btn-block">
        <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
      </button> --}}

      <button type="button" class="btn btn-primary btn-block" data-bs-toggle="modal"
        data-bs-target="#send-mails-confirmation">
        <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
      </button>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="input-group flex-nowrap">
          <div class="input-group-prepend">
            <span class="input-group-text" id="addon-wrapping">@</span>
          </div>
          <input type="text" class="form-control" id="filter-input" placeholder="Filter by email" aria-label="Username"
            aria-describedby="addon-wrapping">
        </div>
      </div>
      <div class="col-md-12">
        <div class="d-flex justify-content-end gap-3 pt-3 px-3">
          <button type="button" class="btn position-relative">
            Checked-in
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
              <span id="num-of-checked-in">21</span>
            </span>
          </button>
          <button type="button" class="btn position-relative">
            Checked-out
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
              <span id="num-of-checked-out">21</span>
            </span>
          </button>
        </div>

      </div>
    </div>


    <div class="overflow-x-scroll">
      <table class="table table-striped" id="tickets-table" style="min-width: 600px;">
        <thead>
          <tr>
            <th scope="col">#</th>
            <th scope="col">Email</th>
            <th scope="col">Created At</th>
            <th scope="col">Status</th>
            <th scope="col">Action</th>
          </tr>
        </thead>
        <tbody>

        </tbody>
      </table>
    </div>
  </section>
  <section>
    <div class="d-flex justify-content-between mb-3 mt-3">
      <h2>Reminder email schedules</h2>
    </div>


    <div class="d-flex justify-content-between gap-3 pt-3 mail-schedule-item d-none" id="mail-schedule-item-template">
      <input class="schedule-id" value="" hidden>
      <input type="date" class="form-control" placeholder="Date" required>
      <select type="text" class="form-control" placeholder="Time">
        <option value="0">12:00 am</option>
        <option value="1">1:00 am</option>
        <option value="2">2:00 am</option>
        <option value="3">3:00 am</option>
        <option value="4">4:00 am</option>
        <option value="5">5:00 am</option>
        <option value="6">6:00 am</option>
        <option value="7">7:00 am</option>
        <option value="8">8:00 am</option>
        <option value="9">9:00 am</option>
        <option value="10">10:00 am</option>
        <option value="11">11:00 am</option>
        <option value="12">12:00 pm</option>
        <option value="13">1:00 pm</option>
        <option value="14">2:00 pm</option>
        <option value="15">3:00 pm</option>
        <option value="16">4:00 pm</option>
        <option value="17">5:00 pm</option>
        <option value="18">6:00 pm</option>
        <option value="19">7:00 pm</option>
        <option value="20">8:00 pm</option>
        <option value="21">9:00 pm</option>
        <option value="22">10:00 pm</option>
        <option value="23">11:00 pm</option>
      </select>
      <button type="button" class="btn btn-primary btn-block remove-schedule">
        <i class="fa fa-minus" aria-hidden="true"></i>
      </button>
    </div>
    <div id="email-schedules">
      {{#if schedules}}
      {{#each schedules}}
      <div class="d-flex justify-content-between gap-3 mail-schedule-item mt-3">
        <input class="schedule-id" value="{{this.id}}" hidden>
        <input type="date" class="form-control" placeholder="Date" value="{{this.date}}">
        <select type="text" class="form-control" placeholder="Time" value="{{this.time}}">
          <option value="0" {{#ifeq this.time 0}}selected{{/ifeq}}>12:00 am</option>
          <option value="1" {{#ifeq this.time 1}}selected{{/ifeq}}>1:00 am</option>
          <option value="2" {{#ifeq this.time 2}}selected{{/ifeq}}>2:00 am</option>
          <option value="3" {{#ifeq this.time 3}}selected{{/ifeq}}>3:00 am</option>
          <option value="4" {{#ifeq this.time 4}}selected{{/ifeq}}>4:00 am</option>
          <option value="5" {{#ifeq this.time 5}}selected{{/ifeq}}>5:00 am</option>
          <option value="6" {{#ifeq this.time 6}}selected{{/ifeq}}>6:00 am</option>
          <option value="7" {{#ifeq this.time 7}}selected{{/ifeq}}>7:00 am</option>
          <option value="8" {{#ifeq this.time 8}}selected{{/ifeq}}>8:00 am</option>
          <option value="9" {{#ifeq this.time 9}}selected{{/ifeq}}>9:00 am</option>
          <option value="10" {{#ifeq this.time 10}}selected{{/ifeq}}>10:00 am</option>
          <option value="11" {{#ifeq this.time 11}}selected{{/ifeq}}>11:00 am</option>
          <option value="12" {{#ifeq this.time 12}}selected{{/ifeq}}>12:00 pm</option>
          <option value="13" {{#ifeq this.time 13}}selected{{/ifeq}}>1:00 pm</option>
          <option value="14" {{#ifeq this.time 14}}selected{{/ifeq}}>2:00 pm</option>
          <option value="15" {{#ifeq this.time 15}}selected{{/ifeq}}>3:00 pm</option>
          <option value="16" {{#ifeq this.time 16}}selected{{/ifeq}}>4:00 pm</option>
          <option value="17" {{#ifeq this.time 17}}selected{{/ifeq}}>5:00 pm</option>
          <option value="18" {{#ifeq this.time 18}}selected{{/ifeq}}>6:00 pm</option>
          <option value="19" {{#ifeq this.time 19}}selected{{/ifeq}}>7:00 pm</option>
          <option value="20" {{#ifeq this.time 20}}selected{{/ifeq}}>8:00 pm</option>
          <option value="21" {{#ifeq this.time 21}}selected{{/ifeq}}>9:00 pm</option>
          <option value="22" {{#ifeq this.time 22}}selected{{/ifeq}}>10:00 pm</option>
          <option value="23" {{#ifeq this.time 23}}selected{{/ifeq}}>11:00 pm</option>
        </select>
        <button type="button" class="btn btn-primary btn-block remove-schedule">
          <i class="fa fa-minus" aria-hidden="true"></i>
        </button>
      </div>
      {{/each}}
      {{/if}}
    </div>

    <div class="d-flex justify-content-end gap-3 mt-3">
      <button type="button" class="btn btn-primary btn-block" id="add-schedule">
        <i class="fa fa-plus" aria-hidden="true"></i>
      </button>
    </div>
    <button type="submit" class="btn btn-primary mt-3" id="save-schedules">
      Save
    </button>
  </section>
</div>

<!-- Modal -->
<div class="modal fade" id="send-mails-confirmation" tabindex="-1" aria-labelledby="send-mails-confirmation"
  aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="send-mails-confirmation">Confirmation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        You intend to send mass reminder emails to registered audiences. Do you want to do it?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="handleOnClickSendEmails()" data-bs-dismiss="modal">Send
          emails</button>
      </div>
    </div>
  </div>
</div>
<div class="position-fixed top-0 end-0 p-3" style="z-index: 9999">
  <div id="liveToast" class="toast align-items-center bg-primary" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body" id="toast-message">
      </div>
      <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>
<script>
  const tickets = {{{ tickets }}};
  const eventId = "{{eventId}}";

  function getTicketHtml(tickets = []) {
    let html = '';
    tickets.forEach((value, i) => {
      html += `
      <tr>
        <th scope="row"> ${i + 1}</th>
        <td>${value.email}</td>
        <td>${(value.createdAt ? new Date(value.createdAt).toLocaleDateString("en", "dd/M/yyyy") : value.createdAt)}</td>
        <td><span class="status status-${value.status}">${value.status}</span></td>
        <td><a href="/tickets/${value.id}">Details</a></td>
      </tr>`
    });

    return html;
  }

  $('#tickets-table').find('tbody').html(getTicketHtml(tickets));

  var debounce = null;
  $("#filter-input").on("keyup", function (e) {
    clearTimeout(debounce);
    debounce = setTimeout(() => {
      const input = $(this).val();
      const filteredTickets = (tickets || []).filter(item => {
        return (item.email || '').includes(input);
      });

      $('#tickets-table').find('tbody').html(getTicketHtml(filteredTickets));
    }, 200);
  });
  $('#num-of-checked-in').text(countStatus('CHECKED-IN'));
  $('#num-of-checked-out').text(countStatus('USED'));
  $("#add-schedule").on("click", function (e) {
    const html = $('#mail-schedule-item-template').clone();
    $('#email-schedules').append(html);
    $('.mail-schedule-item').last().attr('id', '').removeClass('d-none');
  });

  $("#save-schedules").on("click", function (e) {
    const schedules = $('.mail-schedule-item').not('.d-none');
    const dto = [];
    try {
      schedules.each(function () {
        const id = $(this).find('.schedule-id').val();
        const dateInput = $(this).find('[type="date"]').val() || '';
        const date = new Date(dateInput).toISOString();
        const time = $(this).find('select').val();
        dto.push({ eventId, id, date, time });
      });
    } catch (error) {
      showToastMessage(error);
      return;
    }

    fetch(`${location.origin}/mail-schedules/${eventId}`, {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(dto)
    })
      .then(res => {
        if (res.status == 200) {
          showToastMessage('Reminder email schedules updated!');
          return res.json();
        } else {
          showToastMessage('Something went wrong. Try again later.');
          return [];
        }
      })
      .then(res => {renderSchedules(res)
      });
  });

  $('body').on('click', '.remove-schedule', function (e) {
    const scheduleId = $(this).closest('.mail-schedule-item').find('.schedule-id').val();
    fetch(`${location.origin}/mail-schedules/${eventId}/${scheduleId}`, {
      method: 'DELETE',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      }
    })
      .then(res => {
        if (res.status == 200) {
          showToastMessage('Reminder email schedules updated!');
          return res.json();
        } else {
          showToastMessage('Something went wrong. Try again later.');
          return [];
        }
      })
      .then(res => renderSchedules(res))
  })

  function renderSchedules(items) {
    $('#email-schedules').html('');
    items.forEach(item => {
      const html = $('#mail-schedule-item-template').clone();
      $('#email-schedules').append(html);
      const appendedItem = $('.mail-schedule-item').last();
      appendedItem.attr('id', '').removeClass('d-none');
      appendedItem.find('.schedule-id').val(item.id);
      appendedItem.find('[type="date"]').val((item.date || '').split('T')[0]);
      appendedItem.find('select').val(item.time);
    });
  }

  function countStatus(status) {
    return (tickets || []).filter(item => item.status == status).length;
  }

  function handleOnClickSendEmails() {
    fetch(`${location.origin}/events/{{eventId}}/remind`).then(res => {
      if (res.status == 200) {
        showToastMessage('The emails are being sent in the background process.');
      } else {
        showToastMessage('Something went wrong. Try again later.');
      }
    });
  }

  function showToastMessage(message) {
    const messageEl = document.getElementById('toast-message');

    messageEl.innerHTML = message;
    var toastEl = document.getElementById('liveToast');
    var toast = new bootstrap.Toast(toastEl)
    toast.show();
  }
</script>