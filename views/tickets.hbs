<div class="container">
  <div class="d-flex justify-content-between mb-3">
    <h2>Tickets</h2>
    {{!-- <button class="btn btn-primary btn-block">
      <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
    </button> --}}

    <button type="button" class="btn btn-primary btn-block" data-bs-toggle="modal"
      data-bs-target="#send-mails-confirmation">
      <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
    </button>
  </div>
  <div class="row">
    <div class="col-md-6">
      <div class="input-group flex-nowrap">
        <div class="input-group-prepend">
          <span class="input-group-text" id="addon-wrapping">@</span>
        </div>
        <input type="text" class="form-control" id="filter-input" placeholder="Filter by email" aria-label="Username"
          aria-describedby="addon-wrapping">
      </div>
    </div>
    <div class="col-md-6">
      <div class="d-flex justify-content-end gap-3">
        <button type="button" class="btn position-relative">
          Checked-in
          <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success">
            <span id="num-of-checked-in">21</span>
          </span>
        </button>
        <button type="button" class="btn position-relative">
          Checked-out
          <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
            <span id="num-of-checked-out">21</span>
          </span>
        </button>
      </div>

    </div>
  </div>


  <div class="overflow-x-scroll">
    <table class="table table-striped" id="tickets-table" style="min-width: 600px;">
      <thead>
        <tr>
          <th scope="col">#</th>
          <th scope="col">Email</th>
          <th scope="col">Created At</th>
          <th scope="col">Status</th>
          <th scope="col"></th>
        </tr>
      </thead>
      <tbody>

      </tbody>
    </table>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="send-mails-confirmation" tabindex="-1" aria-labelledby="send-mails-confirmation"
  aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="send-mails-confirmation">Confirmation</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        You intend to send mass reminder emails to registered audiences. Do you want to do it?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="handleOnClickSendEmails()" data-bs-dismiss="modal">Send
          emails</button>
      </div>
    </div>
  </div>
</div>
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
  <div id="liveToast" class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body" id="bulk-emails-message">
      </div>
      <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>
<script>
  const tickets = {{{ tickets }}}

  function getTicketHtml(tickets = []) {
    let html = '';
    tickets.forEach((value, i) => {
      html += `
      <tr>
        <th scope="row"> ${i + 1}</th>
        <td>${value.email}</td>
        <td>${ (value.createdAt ? new Date(value.createdAt).toLocaleDateString("en", "dd/M/yyyy") : value.createdAt) }</td>
        <td><span class="status status-${value.status}">${value.status}</span></td>
        <td><a href="/tickets/${value.id}">Details</a></td>
      </tr>`
    });

    return html;
  }

  $('#tickets-table').find('tbody').html(getTicketHtml(tickets));

  var debounce = null;
  $("#filter-input").on("keyup", function (e) {
    clearTimeout(debounce);
    debounce = setTimeout(() => {
      const input = $(this).val();
      const filteredTickets = (tickets || []).filter(item => {
        return (item.email || '').includes(input);
      });
      console.log(filteredTickets)

      $('#tickets-table').find('tbody').html(getTicketHtml(filteredTickets));
    }, 200);
  });
  $('#num-of-checked-in').text(countStatus('CHECKED-IN'));
  $('#num-of-checked-out').text(countStatus('USED'));

  function countStatus(status) {
    return (tickets || []).filter(item => item.status == status).length;
  }

  function handleOnClickSendEmails() {
    fetch(`${location.origin}/events/{{eventId}}/remind`)
      .then(res => {
        const messageEl = document.getElementById('bulk-emails-message');
        let message = '';
        if (res.status == 200) {
          message = 'The emails are being sent in the background process.'
        } else {
          message = 'Something went wrong. Try again later.'
        }

        messageEl.innerHTML = message;
        var toastEl = document.getElementById('liveToast');
        var toast = new bootstrap.Toast(toastEl)
        toast.show()
      });

  }
</script>